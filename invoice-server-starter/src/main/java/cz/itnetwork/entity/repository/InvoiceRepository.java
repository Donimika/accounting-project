package cz.itnetwork.entity.repository;

import cz.itnetwork.dto.InvoiceStatisticsDTO;
import cz.itnetwork.entity.InvoiceEntity;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

public interface InvoiceRepository extends JpaRepository<InvoiceEntity, Long>, JpaSpecificationExecutor<InvoiceEntity> {
    /**
     * Retrieves statistics for invoices, including the sum of prices issued in the current year,
     * the total sum of all prices, and the count of invoices.
     * <p>
     * This query constructs a new {@link cz.itnetwork.dto.InvoiceStatisticsDTO} object using the constructor
     * {@code InvoiceStatisticsDTO(Long currentYearSum, Long allTimeSum, Long invoicesCount)}.
     * It calculates the sum of prices issued in the current year, the total sum of all prices, and the count
     * of invoices using aggregate functions such as SUM and COUNT in the JPQL query.
     * </p>
     *
     * @return Invoice statistics DTO containing the calculated values
     */
    @Query("SELECT NEW cz.itnetwork.dto.InvoiceStatisticsDTO("
            + "SUM(CASE WHEN YEAR(i.issued) = YEAR(CURRENT_DATE) THEN i.price END), "
            + "SUM(i.price), "
            + "COUNT(i))"
            + " FROM invoice i")
    InvoiceStatisticsDTO getStatistics();

    /**
     * Retrieves the total revenue generated by invoices for a specific seller.
     * <p>
     * This query calculates the sum of the price attribute for invoices where the seller's ID matches the
     * specified {@code personId}.
     * </p>
     *
     * @param id The identifier of the seller whose revenue is to be retrieved
     * @return The total revenue generated by invoices for the specified seller
     */
    @Query(value = "SELECT SUM(price) FROM invoice WHERE seller.id = :personId")
    Long getRevenue(@Param("personId") long id);
}
